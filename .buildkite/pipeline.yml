env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  BUILDKIT_PROGRESS: plain

  SERVICE: "widget-factory"
  ECR_URL: "447351447783.dkr.ecr.us-west-2.amazonaws.com"
  DOCKER_REPOSITORY: "$ECR_URL/$SERVICE"
  CACHED_IMAGE: "$DOCKER_REPOSITORY:master-ci-latest"
  CI_NAME: "ci-$BUILDKITE_BUILD_NUMBER"
  DEPLOY_NAME: "master-$BUILDKITE_BUILD_NUMBER"

steps:
  - name: ":docker: Build"
    agents:
      queue: docker-ec2
    plugins:
      ecr#v2.5.0:
        login: true
        region: us-west-2
      docker-compose#v4.9.0:
        config: ops/ci/docker-compose.yml
        cli-version: 2
        build: "$SERVICE"
        tty: false
        image-repository: "$DOCKER_REPOSITORY"
        image-name: "$CI_NAME"
        cache-from:
          - "$SERVICE:$DOCKER_REPOSITORY:branch-$BUILDKITE_BRANCH-latest"
          - "$SERVICE:$DOCKER_REPOSITORY:$CACHED_IMAGE"
        push: "$SERVICE:$DOCKER_REPOSITORY:branch-$BUILDKITE_BRANCH-latest"
        args:
          - BUILDKIT_INLINE_CACHE=1

  - wait


  - name: ":rspec: Run tests"
    agents:
      queue: docker-ec2
    parallelism: 2
    command: "./ops/bin/run-ci-tests.sh"
    artifact_paths: "log/**/*.xml"
    env:
      RAILS_ENV: test
      BUILDKITE_PARALLEL_JOB_COUNT: ${BUILDKITE_PARALLEL_JOB_COUNT}
      BUILDKITE_PARALLEL_JOB: ${BUILDKITE_PARALLEL_JOB}
      BUILDKITE_JOB_ID: ${BUILDKITE_JOB_ID}
    plugins:
      ecr#v2.5.0:
        login: true
        region: us-west-2
      docker-compose#v4.9.0:
        config: ops/ci/docker-compose.yml
        cli-version: 2
        run: "$SERVICE"
        tty: false
        env:
          - BUILDKITE_JOB_ID

  - wait
  
  - label: ":docker: Push cached image"
    plugins:
      ecr#v2.5.0:
        login: true
      docker-compose#v4.9.0:
        config: ops/ci/docker-compose.yml
        cli-version: 2
        push:
          - "$SERVICE:$CACHED_IMAGE"
          - "$SERVICE:$DOCKER_REPOSITORY:$DEPLOY_NAME"
    agents:
      queue: docker-ec2
    if: build.pull_request.repository.fork != true && build.branch == "main"

  - wait

  - label: ':rocket: Deploy to Prod'
    trigger: 'deploy-to-eks'
    build:
      message: ":fork: ${SERVICE} (Prod) ${BUILDKITE_MESSAGE}"
      branch: master
      env:
        APP: ${SERVICE}
        ENVIRONMENT: production
        TAG: ${DEPLOY_NAME}
    if: build.pull_request.repository.fork != true && build.branch == "main"
