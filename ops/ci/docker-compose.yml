---
version: '3.9'
services:
  widget-factory:
    build:
      context: "../../"
      dockerfile: ops/ci/Dockerfile
      ssh:
      - default
      args:
        RUBY_VERSION: 3.0.2
        NODE_MAJOR: '18'
        PG_MAJOR: 14
        PG_VERSION: '14'
        NPM_VERSION: 8.19.2
        GIT_HASH: "${BUILDKITE_COMMIT}"
        GIT_BRANCH: "${BUILDKITE_BRANCH}"
      secrets:
      - vendor_api_access
      - secure_request_salt
      - rails_master_key
    env_file:
    - "../../ops/env/base.env"
    environment:
      RAILS_ENV: test
      CI_NODE_TOTAL: "${BUILDKITE_PARALLEL_JOB_COUNT}"
      CI_NODE_INDEX: "${BUILDKITE_PARALLEL_JOB}"
      DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: 'true'
      VENDOR_API_ACCESS: "${VENDOR_API_ACCESS}"
      SECURE_REQUEST_SALT: "${SECURE_REQUEST_SALT}"
      RAILS_MASTER_KEY: "${RAILS_MASTER_KEY}"
    depends_on:
      moxi-redis:
        condition: service_healthy
      moxi-memcached:
        condition: service_started
      postgres14.5:
        condition: service_healthy
  moxi-redis:
    image: redis:6.2-alpine
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
  moxi-memcached:
    image: memcached:1.6.17-alpine
  postgres14.5:
    image: postgres:14.5
    environment:
    - POSTGRES_USER=apdev
    - POSTGRES_PASSWORD=dev
    - DEBUG=false
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
    command: postgres -c fsync=off -c full_page_writes=off
secrets:
  vendor_api_access:
    environment: VENDOR_API_ACCESS
  secure_request_salt:
    environment: SECURE_REQUEST_SALT
  rails_master_key:
    environment: RAILS_MASTER_KEY
